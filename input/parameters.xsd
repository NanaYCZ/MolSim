<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">



  <xs:element name="parameters">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="outputParameters" type="outputParamsType" />
        <xs:element name="simulationParameters" type="simulationParamsType" />
        <xs:element name="cuboids" type="cuboidType" maxOccurs="unbounded" minOccurs="0" />
        <xs:element name="membranes" type="membraneType" maxOccurs="unbounded" minOccurs="0" />
        <xs:element name="spheres" type="sphereType" maxOccurs="unbounded" minOccurs="0" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>



  <xs:complexType name="outputParamsType">
    <xs:sequence>
      <xs:element name="baseName" type="xs:string" />
      <xs:element name="writeFrequency" type="xs:int" />
      <xs:element name="checkpointInputFileName" type="xs:string" minOccurs="0"/>
      <xs:element name="checkpointOutputFileName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>



  <xs:complexType name="simulationParamsType">
    <xs:sequence>
      <xs:element name="tEnd" type="xs:double" />
      <xs:element name="deltaT" type="xs:double" />
      <xs:element name="cutOffRadius" type="xs:double" />
      <xs:element name="cellSize" type="xs:double" />
      <xs:element name="gravityFactor" type="xs:double" minOccurs="0"/>
      <xs:element name="forceType" type="forceTypeType"/>
      <!--  forceType can either be

              <gravitational/>
              or
              <LJ/>
              or
              <Membrane/>
              or
              <smoothedLJ>
                     <r_l>1.0</r_l>
              </smoothedLJ>

            (1.0 can ofc be any double value)
             -->
      <xs:element name="parallelizationVersion" type="parallelizationSettingsType" minOccurs="0"/>
      <!--  forceType can either be

        <serial/>
        or
        <first_method>
              <numThreads>16</numThreads>
        </first_method>
        or
        <second_method>
              <numThreads>16</numThreads>
        </second_method>

      (16 can ofc be any double value)
       -->
      <xs:element name="Rdf" type="rdfType" minOccurs="0"/>
      <xs:element name="diffusionStatFrequency" type="xs:int" minOccurs="0"/>
      <xs:element name="Thermostats" type="thermoStatsType" minOccurs="0"/>
      <xs:element name="boundaryConditions" type="boundaryConditionsType" />
      <xs:element name="domainDimensions" type="vector3DType" />
    </xs:sequence>
  </xs:complexType>



  <xs:complexType name="forceTypeType">
    <xs:choice>
      <!--   gravitational is basically a enum value, bc of empty complex type   -->
      <xs:element name="gravitational">
        <xs:complexType>
        </xs:complexType>
      </xs:element>
      <xs:element name="Membrane">
        <xs:complexType>
        </xs:complexType>
      </xs:element>
      <!--   LJ is basically a enum value, bc of empty complex type   -->
      <xs:element name="LJ">
        <xs:complexType>
        </xs:complexType>
      </xs:element>
      <xs:element name="smoothedLJ">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="r_l" type="xs:double"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="parallelizationSettingsType">
    <xs:choice>
      <!--   serial is basically a enum value, bc of empty complex type   -->
      <xs:element name="serial">
        <xs:complexType>
        </xs:complexType>
      </xs:element>
      <xs:element name="first_method">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="numThreads" type="xs:int" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="second_method">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="numThreads" type="xs:int" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="rdfType">
    <xs:sequence>
      <xs:element name="rdfIntervalSize" type="xs:double"/>
      <xs:element name="rdfStatFrequency" type="xs:int" />
    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="thermoStatsType">
    <xs:sequence>
      <xs:element name="initTemp" type="xs:double"  />
      <xs:element name="targetTemp" type="xs:double" minOccurs="0"/>
      <xs:element name="thermoStatFrequency" type="xs:int" />
      <xs:element name="maxTempDiff" type="xs:double" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="vector3DType">
    <xs:sequence>
      <xs:element name="x" type="xs:double" />
      <xs:element name="y" type="xs:double" />
      <xs:element name="z" type="xs:double" />
    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="boundaryConditionsType">
    <xs:sequence>
      <xs:element name="boundaryConditionsPositiveZ" type="xs:string" />
      <xs:element name="boundaryConditionsNegativeZ" type="xs:string" />
      <xs:element name="boundaryConditionsPositiveX" type="xs:string" />
      <xs:element name="boundaryConditionsNegativeX" type="xs:string" />
      <xs:element name="boundaryConditionsPositiveY" type="xs:string" />
      <xs:element name="boundaryConditionsNegativeY" type="xs:string" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cuboidType">
    <xs:sequence>
      <xs:element name="position" type="vector3DType" />
      <xs:element name="velocity" type="vector3DType" />
      <xs:element name="dimensions" type="vector3DType" />
      <!-- specifying mean velocity and Thermostats at the same time is undefined behaviour-->
      <xs:element name="meanVelocity" type="xs:double" minOccurs="0" />
      <xs:element name="mass" type="xs:double" />
      <xs:element name="meshWidth" type="xs:double" />
      <xs:element name="sigma" type="xs:double" />
      <xs:element name="epsilon" type="xs:double" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sphereType">
    <xs:sequence>
      <xs:element name="center_position" type="vector3DType" />
      <xs:element name="velocity" type="vector3DType" />
      <!-- specifying mean velocity and Thermostats at the same time is undefined behaviour-->
      <xs:element name="meanVelocity" type="xs:double" minOccurs="0"/>
      <xs:element name="mass" type="xs:double" />
      <xs:element name="radius" type="xs:double" />
      <xs:element name="meshWidth" type="xs:double" />
      <xs:element name="sigma" type="xs:double" />
      <xs:element name="epsilon" type="xs:double" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="membraneType">
    <xs:sequence>
      <xs:element name="position" type="vector3DType" />
      <xs:element name="velocity" type="vector3DType" />
      <xs:element name="dimensions" type="vector3DType" />
      <xs:element name="mass" type="xs:double" />
      <xs:element name="meshWidth" type="xs:double" />
      <xs:element name="averageBondLength" type="xs:double" />
      <xs:element name="forceParameter" type="xs:double" />
      <xs:element name="sigma" type="xs:double" />
      <xs:element name="epsilon" type="xs:double" />
    </xs:sequence>
  </xs:complexType>

</xs:schema>